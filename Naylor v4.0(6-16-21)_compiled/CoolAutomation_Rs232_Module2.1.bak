/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
// #ENABLE_DYNAMIC
#SYMBOL_NAME "CoolAutomation_Rs232_Module2.1"
#HINT "CoolAutomation_Rs232_Module2.1"
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
#PRINT_TO_TRACE

// Rs232
STRING_INPUT Rs232Rx$[10000];
DIGITAL_INPUT diStartClient;
STRING_INPUT siToCoolAutomationCore[2048];
DIGITAL_INPUT diOSCPoll;
DIGITAL_INPUT diOSCQueue;
DIGITAL_INPUT diDEBUG;
//
STRING_OUTPUT Rs232Tx$;
STRING_OUTPUT soFromCoolAutomationCore;
DIGITAL_OUTPUT doCelsius_Fb;
DIGITAL_OUTPUT doFarenheit_Fb;
DIGITAL_INPUT diCelsius;
DIGITAL_INPUT diFarenheit;
DIGITAL_INPUT diOscQuery;

////////////////////////////////////////

string BufferOut2Cm[2048];
string BufferInFromCm[10000];
string BufferInProcess[256];
integer FbDisabled;
string SubConnectionBuffer[128];
string AddressHolder[250][6];
integer AddressCounter;
integer QueryScan;
string QueryString$[100];
integer iPollCounter;
integer iQueryLouverActive;

///////////////////////////////////////
///////////////////////////////////////

PUSH diStartClient
{
	Rs232Tx$ = "\n";
	wait(300)
	Rs232Tx$ = "set echo 0";
}

PUSH diCelsius
{
	if(diStartClient)
	{
		FbDisabled = 1;
		BufferOut2Cm = BufferOut2Cm + "set deg c\n" + "ls2\n";
		doFarenheit_Fb = 0;
		doCelsius_Fb = 1;
		wait (300);
		FbDisabled = 0;
	}
}

PUSH diFarenheit
{
	if(diStartClient)
	{
		FbDisabled = 1;
		BufferOut2Cm = BufferOut2Cm + "set deg f\n" + "ls2\n";
		doCelsius_Fb = 0;
		doFarenheit_Fb = 1;
		wait (300);
		FbDisabled = 0;
	}
}

PUSH diOSCPoll
{
	if(diStartClient)
	{
		if((iPollCounter<5) && (iQueryLouverActive = 0))
		{
			iPollCounter = iPollCounter + 1;
			BufferOut2Cm = BufferOut2Cm + "ls2\n";
		}
		else
		{
			iQueryLouverActive = 1;
			iPollCounter = 0;
		}
		if(diDEBUG)		
			trace("CoolAutomation: Osc Poll Pulse");
	}
}

PUSH diOSCQueue
{
	string Output$[256];
	//
	if(diStartClient)
	{
		if(Len(BufferOut2Cm))
		{
	     	Output$ = remove("\n",BufferOut2Cm);
			if(diDEBUG)
				trace("CoolAutomation: Sending command out: %s",Output$);
			Rs232Tx$ = Output$;
		}
	}
}

CHANGE siToCoolAutomationCore
{

    signed_integer iStatus;    
    if(diStartClient)
	{
	    if(find(":AddressBroadcast",siToCoolAutomationCore,1))
		{
			AddressCounter = AddressCounter + 1;
			AddressHolder[AddressCounter] = mid(siToCoolAutomationCore,1,6);
			if(diDEBUG)
				trace("CoolAutomation: Found address broadcast %s",AddressHolder[AddressCounter]);
		}
		else
		{
			BufferOut2Cm = BufferOut2Cm + siToCoolAutomationCore;
		}
	}
}

CHANGE Rs232Rx$
{
	string TempString$[100];
	string Trash$[50];
	if(diStartClient)
	{		
		BufferInFromCm = Rs232Rx$; 
		if(find("\n",BufferInFromCm))
		{
			//////////////////////////
			if(mid(BufferInFromCm,1,2) = "\n") // this is to resolve 0d,0a bug in rs232
				Trash$ = remove("\n",BufferInFromCm);
			//////////////////////////
			BufferInProcess = remove("\n",BufferInFromCm);
			if((len(BufferInProcess)>0) && (BufferInProcess <> "OK\n") && (BufferInProcess <> ">\n"))
			{
				if(FbDisabled = 0)
				{
					if(len(BufferInProcess) = 43)
					{
						soFromCoolAutomationCore = BufferInProcess;
						doFarenheit_Fb = 0;
						doCelsius_Fb = 1;
					}
					else if(len(BufferInProcess) = 45)
					{
						soFromCoolAutomationCore = BufferInProcess;
						doCelsius_Fb = 0;
						doFarenheit_Fb = 1;
					}
					else if(len(BufferInProcess) = 3)
					{
						soFromCoolAutomationCore = QueryString$ + mid(BufferInProcess,1,1) + "\n";
						TempString$ = QueryString$ + BufferInProcess + "\n";
						if(diDebug)
							trace("CoolAutomation2: Sending %s to SubModule", TempString$);			
						ClearBuffer(QueryString$);
					}
				}
			}
			ClearBuffer(BufferInProcess);
		}
	}
}

change diOscQuery
{
	string StringOut$[100];
	if(diStartClient)
	{
		if(iQueryLouverActive = 1)
		{
			QueryScan = QueryScan + 1;
			
			if(len(AddressHolder[QueryScan]) > 0)
			{
				StringOut$ = "query " + AddressHolder[QueryScan] + " s\n";
				QueryString$ = AddressHolder[QueryScan] + ":Louver=" ;
				BufferOut2Cm = BufferOut2Cm + StringOut$;
				if(diDebug)
					trace("CoolAutomation2: Sending %s", StringOut$);
			}
			else
			{
				iQueryLouverActive = 0;
				QueryScan = 0;		
			}	
	    }
	}
}
